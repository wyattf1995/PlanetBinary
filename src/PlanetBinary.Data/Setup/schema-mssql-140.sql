IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'BlogDatabaseSettings')
CREATE TABLE [BlogConfiguration](
[Id] [int] PRIMARY KEY CLUSTERED NOT NULL,
[ConfigurationKey] [varchar](64) NULL,
[ConfigurationValue] [nvarchar](max) NULL,
[TimeLastModified] [datetime] NULL)

IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'Category')
CREATE TABLE [Category](
[Id] [uniqueidentifier] PRIMARY KEY NOT NULL,
[Title] [nvarchar](64) NULL,
[DisplayName] [nvarchar](64) NULL,
[Note] [nvarchar](128) NULL) 

IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'Comment')
CREATE TABLE [Comment](
[Id] [uniqueidentifier] PRIMARY KEY NOT NULL,
[Username] [nvarchar](64) NULL,
[Email] [nvarchar](128) NULL,
[IPAddress] [nvarchar](64) NULL,
[CreateOnUtc] [datetime] NOT NULL,
[CommentContent] [nvarchar](max) NOT NULL,
[PostId] [uniqueidentifier] NOT NULL,
[IsApproved] [bit] NOT NULL,
[UserAgent] [nvarchar](512) NULL) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'CommentReply')
CREATE TABLE [CommentReply](
[Id] [uniqueidentifier] PRIMARY KEY NOT NULL,
[ReplyContent] [nvarchar](max) NULL,
[ReplyTimeUtc] [datetime] NOT NULL,
[UserAgent] [nvarchar](512) NULL,
[IpAddress] [nvarchar](64) NULL,
[CommentId] [uniqueidentifier] NULL) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'Post')
CREATE TABLE [Post](
[Id] [uniqueidentifier] PRIMARY KEY NOT NULL,
[Title] [nvarchar](128) NULL,
[Slug] [nvarchar](128) NULL,
[PostContent] [nvarchar](max) NULL,
[CommentEnabled] [bit] NOT NULL,
[CreateOnUtc] [datetime] NOT NULL,
[ContentAbstract] [nvarchar](1024) NULL) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'PostCategory')
CREATE TABLE [PostCategory](
	[PostId] [uniqueidentifier] NOT NULL,
	[CategoryId] [uniqueidentifier] NOT NULL,
 CONSTRAINT [PK_PostCategory] PRIMARY KEY CLUSTERED 
(
	[PostId] ASC,
	[CategoryId] ASC
) ON [PRIMARY]
) ON [PRIMARY]

IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'PostExtension')
CREATE TABLE [PostExtension](
[PostId] [uniqueidentifier] PRIMARY KEY NOT NULL,
[Hits] [int] NOT NULL,
[Likes] [int] NOT NULL)

IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'PostPublish')
CREATE TABLE [PostPublish](
[PostId] [uniqueidentifier] PRIMARY KEY NOT NULL,
[IsPublished] [bit] NOT NULL,
[ExposedToSiteMap] [bit] NOT NULL,
[IsFeedIncluded] [bit] NOT NULL,
[LastModifiedUtc] [datetime] NULL,
[IsDeleted] [bit] NOT NULL,
[PubDateUtc] [datetime] NULL,
[Revision] [int] NULL,
[PublisherIp] [nvarchar](64) NULL,
[ContentLanguageCode] [nvarchar](8) NULL)

IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'PostTag')
CREATE TABLE [PostTag](
	[PostId] [uniqueidentifier] NOT NULL,
	[TagId] [int] NOT NULL,
 CONSTRAINT [PK_PostTag] PRIMARY KEY CLUSTERED 
(
	[PostId] ASC,
	[TagId] ASC
) ON [PRIMARY]
) ON [PRIMARY]

IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'Tag')
CREATE TABLE [Tag](
[Id] [int] IDENTITY(1,1) PRIMARY KEY CLUSTERED NOT NULL,
[DisplayName] [nvarchar](32) NULL,
[NormalizedName] [nvarchar](32) NULL)

IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME = N'FK_Comment_Post')
ALTER TABLE [Comment] WITH CHECK ADD CONSTRAINT [FK_Comment_Post] FOREIGN KEY([PostId])
REFERENCES [Post] ([Id])
ON UPDATE CASCADE
ON DELETE CASCADE
ALTER TABLE [Comment] CHECK CONSTRAINT [FK_Comment_Post]

IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME = N'FK_PostCategory_Category')
ALTER TABLE [PostCategory]  WITH CHECK ADD  CONSTRAINT [FK_PostCategory_Category] FOREIGN KEY([CategoryId])
REFERENCES [Category] ([Id])
ON UPDATE CASCADE
ON DELETE CASCADE
ALTER TABLE [PostCategory] CHECK CONSTRAINT [FK_PostCategory_Category]

IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME = N'FK_PostCategory_Post')
ALTER TABLE [PostCategory]  WITH CHECK ADD  CONSTRAINT [FK_PostCategory_Post] FOREIGN KEY([PostId])
REFERENCES [Post] ([Id])
ON DELETE CASCADE
ALTER TABLE [PostCategory] CHECK CONSTRAINT [FK_PostCategory_Post]

IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME = N'FK_PostExtension_Post')
ALTER TABLE [PostExtension]  WITH CHECK ADD  CONSTRAINT [FK_PostExtension_Post] FOREIGN KEY([PostId])
REFERENCES [Post] ([Id])
ON DELETE CASCADE
ALTER TABLE [PostExtension] CHECK CONSTRAINT [FK_PostExtension_Post]

IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME = N'FK_PostPublish_Post')
ALTER TABLE [PostPublish]  WITH CHECK ADD  CONSTRAINT [FK_PostPublish_Post] FOREIGN KEY([PostId])
REFERENCES [Post] ([Id])
ON DELETE CASCADE
ALTER TABLE [PostPublish] CHECK CONSTRAINT [FK_PostPublish_Post]

IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME = N'FK_PostTag_Post')
ALTER TABLE [PostTag]  WITH CHECK ADD  CONSTRAINT [FK_PostTag_Post] FOREIGN KEY([PostId])
REFERENCES [Post] ([Id])
ON DELETE CASCADE
ALTER TABLE [PostTag] CHECK CONSTRAINT [FK_PostTag_Post]

IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME = N'FK_PostTag_Tag')
ALTER TABLE [PostTag]  WITH CHECK ADD  CONSTRAINT [FK_PostTag_Tag] FOREIGN KEY([TagId])
REFERENCES [Tag] ([Id])
ON UPDATE CASCADE
ON DELETE CASCADE
ALTER TABLE [PostTag] CHECK CONSTRAINT [FK_PostTag_Tag]